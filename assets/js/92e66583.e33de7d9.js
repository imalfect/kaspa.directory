"use strict";(self.webpackChunkkaspa_directory=self.webpackChunkkaspa_directory||[]).push([[9185],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),l=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(r),d=n,k=c["".concat(u,".").concat(d)]||c[d]||m[d]||i;return r?a.createElement(k,o(o({ref:t},p),{},{components:r})):a.createElement(k,o({ref:t},p))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[c]="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8633:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const i={},o="Kaspa Stratum Bridge",s={unversionedId:"kaspa-stratum-bridge",id:"kaspa-stratum-bridge",title:"Kaspa Stratum Bridge",description:"Project Information",source:"@site/community-projects/kaspa-stratum-bridge.md",sourceDirName:".",slug:"/kaspa-stratum-bridge",permalink:"/community-projects/kaspa-stratum-bridge",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"fundingPoolsSidebar",previous:{title:"Kaspa Rest Server",permalink:"/community-projects/kaspa-rest-server"},next:{title:"Kaspa Transaction Report",permalink:"/community-projects/kaspa-transaction-report"}},u={},l=[{value:"Project Information",id:"project-information",level:2},{value:"Links",id:"links",level:2},{value:"Project Description",id:"project-description",level:2},{value:"Kaspa Stratum Adapter",id:"kaspa-stratum-adapter",level:3},{value:"Features:",id:"features",level:4}],p={toc:l},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"kaspa-stratum-bridge"},"Kaspa Stratum Bridge"),(0,n.kt)("h2",{id:"project-information"},"Project Information"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Creator: rdugan"),(0,n.kt)("li",{parentName:"ul"},"Category: Mining"),(0,n.kt)("li",{parentName:"ul"},"Programming Language: Go"),(0,n.kt)("li",{parentName:"ul"},"License: MIT")),(0,n.kt)("h2",{id:"links"},"Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rdugan/kaspa-stratum-bridge"},"GitHub"))),(0,n.kt)("h2",{id:"project-description"},"Project Description"),(0,n.kt)("h3",{id:"kaspa-stratum-adapter"},"Kaspa Stratum Adapter"),(0,n.kt)("p",null,"This is a lightweight daemon that allows mining to a local (or remote) kaspa node using stratum-base miners."),(0,n.kt)("p",null,"This daemon is confirmed working with the miners below in both kaspa-only and dual-mining modes (for those that support it) on Windows/MacOs/Linux/HiveOs."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"bzminer"),(0,n.kt)("li",{parentName:"ul"},"lolminer"),(0,n.kt)("li",{parentName:"ul"},"srbminer"),(0,n.kt)("li",{parentName:"ul"},"teamreadminer"),(0,n.kt)("li",{parentName:"ul"},"IceRiver ASICs")),(0,n.kt)("p",null,"Hive setup: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/rdugan/kaspa-stratum-bridge/blob/main/docs/hive-setup.md"},"detailed instructions here")),(0,n.kt)("p",null,"Discord discussions/issues: ",(0,n.kt)("a",{parentName:"p",href:"https://discord.com/channels/599153230659846165/1025501807570600027"},"here")),(0,n.kt)("p",null,"Huge shoutout to ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/KaffinPX/KStratum"},"https://github.com/KaffinPX/KStratum")," for the inspiration"),(0,n.kt)("h4",{id:"features"},"Features:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Shares-based work allocation with miner-like periodic stat output")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"===============================================================================\n  worker name   |  avg hashrate  |   acc/stl/inv  |    blocks    |    uptime   \n-------------------------------------------------------------------------------\n octo12_1       |      43.36GH/s |       1183/0/0 |            1 |      53m18s\n pc             |     758.97MH/s |       1017/0/0 |            0 |      52m54s\n-------------------------------------------------------------------------------\n                |      44.12GH/s |       2200/0/0 |            1 |      53m20s\n========================================================== ks_bridge_v1.1.7 ===\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Variable difficulty engine (vardiff)")),(0,n.kt)("p",null,"Multiple miners with significantly different hashrates can be connected to the same stratum bridge instance, and the appropriate difficulty will automatically be decided for each one.  Default settings target 20 shares/min, resulting in high confidence decisions regarding difficulty adjustments, and stable measured hashrates (1hr avg hashrates within +/- 10% of actual)."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Optional monitoring UI")),(0,n.kt)("p",null,"Detailed setup ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/rdugan/kaspa-stratum-bridge/blob/main/docs/monitoring-setup.md"},"instructions")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://github.com/rdugan/kaspa-stratum-bridge/raw/main/docs/images/dashboard.png",alt:"Monitoring Dashboard"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Prometheus API")),(0,n.kt)("p",null,"If the app is run with the ",(0,n.kt)("inlineCode",{parentName:"p"},"-prom={port}")," flag the application will host stats on the port specified by ",(0,n.kt)("inlineCode",{parentName:"p"},"{port}"),", these stats are documented in the file prom.go. This is intended to be use by prometheus but the stats can be fetched and used independently if desired. ",(0,n.kt)("inlineCode",{parentName:"p"},"curl http://localhost:2114/metrics | grep ks_")," will get a listing of current stats. All published stats have a ",(0,n.kt)("inlineCode",{parentName:"p"},"ks_")," prefix for ease of use."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'user:~$ curl http://localhost:2114/metrics | grep ks_\n# HELP ks_estimated_network_hashrate_gauge Gauge representing the estimated network hashrate\n# TYPE ks_estimated_network_hashrate_gauge gauge\nks_estimated_network_hashrate_gauge 2.43428982879776e+14\n# HELP ks_network_block_count Gauge representing the network block count\n# TYPE ks_network_block_count gauge\nks_network_block_count 271966\n# HELP ks_network_difficulty_gauge Gauge representing the network difficulty\n# TYPE ks_network_difficulty_gauge gauge\nks_network_difficulty_gauge 1.2526479386202519e+14\n# HELP ks_valid_share_counter Number of shares found by worker over time\n# TYPE ks_valid_share_counter counter\nks_valid_share_counter{ip="192.168.0.17",miner="SRBMiner-MULTI/1.0.8",wallet="kaspa:qzk3uh2twkhu0fmuq50mdy3r2yzuwqvstq745hxs7tet25hfd4egcafcdmpdl",worker="002"} 276\nks_valid_share_counter{ip="192.168.0.24",miner="BzMiner-v11.1.0",wallet="kaspa:qzk3uh2twkhu0fmuq50mdy3r2yzuwqvstq745hxs7tet25hfd4egcafcdmpdl",worker="003"} 43\nks_valid_share_counter{ip="192.168.0.65",miner="BzMiner-v11.1.0",wallet="kaspa:qzk3uh2twkhu0fmuq50mdy3r2yzuwqvstq745hxs7tet25hfd4egcafcdmpdl",worker="001"} 307\n# HELP ks_worker_job_counter Number of jobs sent to the miner by worker over time\n# TYPE ks_worker_job_counter counter\nks_worker_job_counter{ip="192.168.0.17",miner="SRBMiner-MULTI/1.0.8",wallet="kaspa:qzk3uh2twkhu0fmuq50mdy3r2yzuwqvstq745hxs7tet25hfd4egcafcdmpdl",worker="002"} 3471\nks_worker_job_counter{ip="192.168.0.24",miner="BzMiner-v11.1.0",wallet="kaspa:qzk3uh2twkhu0fmuq50mdy3r2yzuwqvstq745hxs7tet25hfd4egcafcdmpdl",worker="003"} 3399\nks_worker_job_counter{ip="192.168.0.65",miner="BzMiner-v11.1.0",wallet="kaspa:qzk3uh2twkhu0fmuq50mdy3r2yzuwqvstq745hxs7tet25hfd4egcafcdmpdl",worker="001"} 3425\n\n')))}m.isMDXComponent=!0}}]);